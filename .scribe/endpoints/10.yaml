name: Groups
description: |-

  API endpoints for managing Groups
endpoints:
  -
    httpMethods:
      - GET
    uri: api/groups/all
    metadata:
      groupName: Groups
      groupDescription: |-

        API endpoints for managing Groups
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all groups'
      description: 'List all groups for selection'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e6Ekcah143a56fPvgVDdb8Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/groups/clients
    metadata:
      groupName: Groups
      groupDescription: |-

        API endpoints for managing Groups
      subgroup: ''
      subgroupDescription: ''
      title: 'Add clients to the group'
      description: 'Update an array of clients setting their group_id to the current group'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      group_id:
        name: group_id
        description: ''
        required: true
        example: 13
        type: integer
        custom: []
      clients:
        name: clients
        description: ''
        required: true
        example:
          - 13
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      group_id: 13
      clients:
        - 13
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8dPZ61a6E3b45cVvehfaDgk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/groups/clients
    metadata:
      groupName: Groups
      groupDescription: |-

        API endpoints for managing Groups
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove clients from the group'
      description: 'Update an array of clients setting their group_id to null'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      group_id:
        name: group_id
        description: ''
        required: true
        example: 15
        type: integer
        custom: []
      clients:
        name: clients
        description: ''
        required: true
        example:
          - 6
        type: 'integer[]'
        custom: []
    cleanBodyParameters:
      group_id: 15
      clients:
        - 6
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 63cdeD8khP4bVE1fZ56gava'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/groups
    metadata:
      groupName: Groups
      groupDescription: |-

        API endpoints for managing Groups
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the groups.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      title:
        name: title
        description: string.
        required: false
        example: consequuntur
        type: string
        custom: []
      crew_member:
        name: crew_member
        description: string.
        required: false
        example: aperiam
        type: string
        custom: []
    cleanQueryParameters:
      title: consequuntur
      crew_member: aperiam
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aD3Z1h66dvkPfe4E5cab8Vg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/groups
    metadata:
      groupName: Groups
      groupDescription: |-

        API endpoints for managing Groups
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created group.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: iusto
        type: string
        custom: []
      crew_id:
        name: crew_id
        description: ''
        required: true
        example: 15
        type: integer
        custom: []
      clients_virtual_count:
        name: clients_virtual_count
        description: ''
        required: false
        example: 6
        type: integer
        custom: []
    cleanBodyParameters:
      title: iusto
      crew_id: 15
      clients_virtual_count: 6
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zafb8a4cd6v3D5gPehVE16k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/groups/{id}'
    metadata:
      groupName: Groups
      groupDescription: |-

        API endpoints for managing Groups
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified group.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZvPd8EaeVg415k663Dcbfah'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/groups/{group_id}/edit'
    metadata:
      groupName: Groups
      groupDescription: |-

        API endpoints for managing Groups
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the data for the form for editing a group.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      group_id:
        name: group_id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      group_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a6Zc63ekvVh1a5dfPEb4gD8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/groups/{id}'
    metadata:
      groupName: Groups
      groupDescription: |-

        API endpoints for managing Groups
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified group.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      crew_id:
        name: crew_id
        description: ''
        required: true
        example: 7
        type: integer
        custom: []
      clients_virtual_count:
        name: clients_virtual_count
        description: ''
        required: false
        example: 2
        type: integer
        custom: []
    cleanBodyParameters:
      title: consequatur
      crew_id: 7
      clients_virtual_count: 2
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e6k4caZb5a3VPvED1hf6gd8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/groups/{id}'
    metadata:
      groupName: Groups
      groupDescription: |-

        API endpoints for managing Groups
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified group from database.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a836VP1cZ6dDfEhav54kgbe'
    controller: null
    method: null
    route: null
    custom: []
