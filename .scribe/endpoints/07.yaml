name: Phases
description: |-

  API endpoints for managing Phases
endpoints:
  -
    httpMethods:
      - GET
    uri: api/phases
    metadata:
      groupName: Phases
      groupDescription: |-

        API endpoints for managing Phases
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the phases.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V83DPa4dvgabkef561Ehc6Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/phases/create
    metadata:
      groupName: Phases
      groupDescription: |-

        API endpoints for managing Phases
      subgroup: ''
      subgroupDescription: ''
      title: 'Get data for the creation form of a phase'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer baE34Pv6fdh5aDc1kgV6Ze8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/phases
    metadata:
      groupName: Phases
      groupDescription: |-

        API endpoints for managing Phases
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created phase.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: repudiandae
        type: string
        custom: []
      is_required:
        name: is_required
        description: ''
        required: true
        example: true
        type: boolean
        custom: []
      services:
        name: services
        description: ''
        required: true
        example:
          - vitae
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      title: repudiandae
      is_required: true
      services:
        - vitae
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6Vhda43DPek56v8cfa1bgZE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/phases/{id}'
    metadata:
      groupName: Phases
      groupDescription: |-

        API endpoints for managing Phases
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified phase.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the phase.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vaPa866VcZgf51k43eEdDbh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/phases/{id}'
    metadata:
      groupName: Phases
      groupDescription: |-

        API endpoints for managing Phases
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified phase.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the phase.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: ipsa
        type: string
        custom: []
      is_required:
        name: is_required
        description: ''
        required: true
        example: true
        type: boolean
        custom: []
      services:
        name: services
        description: ''
        required: true
        example:
          - deserunt
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      title: ipsa
      is_required: true
      services:
        - deserunt
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ca6Ehgb5ZvV6148kPDfd3ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/phases/{id}'
    metadata:
      groupName: Phases
      groupDescription: |-

        API endpoints for managing Phases
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a phase from database.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the phase.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 46kc6de8Zg5bEDvhfa1V3aP'
    controller: null
    method: null
    route: null
    custom: []
