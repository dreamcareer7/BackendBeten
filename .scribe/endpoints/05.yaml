name: Users
description: |-

  API endpoints for managing Users
endpoints:
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Users
      groupDescription: |-

        API endpoints for managing Users
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the users.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      per_page:
        name: per_page
        description: 'يجب أن تكون قيمة value مساوية أو أكبر من 2. يجب أن تكون قيمة value مساوية أو أصغر من 100.'
        required: false
        example: 9
        type: integer
        custom: []
      name:
        name: name
        description: 'يجب أن لا يتجاوز طول النّص value 255 حروفٍ/حرفًا.'
        required: false
        example: jarmxikpvpyhbmovbnkrpqqof
        type: string
        custom: []
      email:
        name: email
        description: 'يجب أن لا يتجاوز طول النّص value 255 حروفٍ/حرفًا.'
        required: false
        example: rutherford.louvenia@example.com
        type: string
        custom: []
      contact:
        name: contact
        description: 'يجب أن لا يتجاوز طول النّص value 255 حروفٍ/حرفًا.'
        required: false
        example: yrihfujazhobbgwxfksxkhq
        type: string
        custom: []
    cleanBodyParameters:
      per_page: 9
      name: jarmxikpvpyhbmovbnkrpqqof
      email: rutherford.louvenia@example.com
      contact: yrihfujazhobbgwxfksxkhq
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v8E5VZfPc16abade63kg4hD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: Users
      groupDescription: |-

        API endpoints for managing Users
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created user in database.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'يجب أن يكون طول النص value على الأقل 3 حروفٍ/حرفًا يجب أن لا يتجاوز طول النّص value 255 حروفٍ/حرفًا.'
        required: true
        example: etsqwh
        type: string
        custom: []
      email:
        name: email
        description: 'يجب أن يكون value عنوان بريد إلكتروني صحيح البُنية.'
        required: true
        example: rebeca09@example.com
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: ad
        type: string
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: true
        type: boolean
        custom: []
      contact:
        name: contact
        description: 'يجب أن يكون طول النص value على الأقل 5 حروفٍ/حرفًا يجب أن لا يتجاوز طول النّص value 255 حروفٍ/حرفًا.'
        required: true
        example: xiksip
        type: string
        custom: []
    cleanBodyParameters:
      name: etsqwh
      email: rebeca09@example.com
      password: ad
      is_active: true
      contact: xiksip
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cEZf5ePh64vgb13k6adDa8V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        API endpoints for managing Users
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified user with their roles.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PD36hb4k8dVvgfE5a16Zcae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{user_id}/edit'
    metadata:
      groupName: Users
      groupDescription: |-

        API endpoints for managing Users
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the user for editing.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      user_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 661hdP85DZkacg4bfvV3aeE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        API endpoints for managing Users
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: ''
        required: true
        example: facere
        type: string
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: true
        type: boolean
        custom: []
      contact:
        name: contact
        description: 'يجب أن يكون طول النص value على الأقل 5 حروفٍ/حرفًا يجب أن لا يتجاوز طول النّص value 255 حروفٍ/حرفًا.'
        required: true
        example: swyhxakpwmfmkntlyxa
        type: string
        custom: []
    cleanBodyParameters:
      password: facere
      is_active: true
      contact: swyhxakpwmfmkntlyxa
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer efvZa1b384gVDPE5ha66ckd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: Users
      groupDescription: |-

        API endpoints for managing Users
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark the specified user in database as deleted.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d6egD6V4Z8ka5avEcP3f1bh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/populate-create-user-dropdowns
    metadata:
      groupName: Users
      groupDescription: |-

        API endpoints for managing Users
      subgroup: ''
      subgroupDescription: ''
      title: 'Populate user creation dropdowns'
      description: 'Get available roles & crew members to select from when creating a user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6afe5gE1cV6vhd8Z4kaPb3D'
    controller: null
    method: null
    route: null
    custom: []
