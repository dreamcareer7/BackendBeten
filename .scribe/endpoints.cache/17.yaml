## Autogenerated by Scribe. DO NOT MODIFY.

name: Document
description: |-

  API endpoints for managing Document
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/documents/{type}/{id}'
    metadata:
      groupName: Document
      groupDescription: |-

        API endpoints for managing Document
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the documents for a given model.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: 12
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the {type}.'
        required: true
        example: et
        type: string
        custom: []
    cleanUrlParameters:
      type: 12
      id: et
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d6bc5kZvPaV8D14eaghfE63'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/documents/{type}/{id}'
    metadata:
      groupName: Document
      groupDescription: |-

        API endpoints for managing Document
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created document in database.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: 11
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the {type}.'
        required: true
        example: id
        type: string
        custom: []
    cleanUrlParameters:
      type: 11
      id: id
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      model_type:
        name: model_type
        description: 'Must be one of <code>App\Models\Client</code>, <code>App\Models\Complaint</code>, <code>App\Models\Contract</code>, <code>App\Models\Crew</code>, <code>App\Models\Dormitory</code>, <code>App\Models\User</code>, <code>App\Models\Vehicle</code>, or <code>App\Models\Group</code>.'
        required: true
        example: App\Models\Complaint
        type: string
        custom: []
      model_id:
        name: model_id
        description: ''
        required: true
        example: 13
        type: integer
        custom: []
      title:
        name: title
        description: 'يجب أن يكون طول النص value على الأقل 5 حروفٍ/حرفًا يجب أن لا يتجاوز طول النّص value 255 حروفٍ/حرفًا.'
        required: true
        example: jfljoux
        type: string
        custom: []
      documents:
        name: documents
        description: 'Must be a file. يجب أن لا يتجاوز حجم الملف value 20000 كيلوبايت.'
        required: true
        example:
          - null
        type: 'file[]'
        custom: []
    cleanBodyParameters:
      model_type: App\Models\Complaint
      model_id: 13
      title: jfljoux
    fileParameters:
      documents:
        - null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Ee4a61cb58dhaDZVfgk3P6v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/documents/{id}'
    metadata:
      groupName: Document
      groupDescription: |-

        API endpoints for managing Document
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified document from database.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the document.'
        required: true
        example: 11
        type: integer
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vf8b4k3d1eDZa6c6a5hVEPg'
    controller: null
    method: null
    route: null
    custom: []
